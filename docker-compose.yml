version: '3'
services:

    # PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: php:8.2
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - app-network

    # Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "10080:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        networks:
            - app-network

    # MySQL Service
    db:
        image: mysql:8.0.29
        volumes:
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
            - ./docker/data/mysql:/var/lib/mysql
        container_name: db8.0.29
        restart: unless-stopped
        tty: true
        ports:
            - "13307:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-development}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
            MYSQL_PASSWORD: ${DB_PASSWORD:-mysql}
            MYSQL_USER: ${DB_USERNAME:-mysql}
        networks:
            - app-network

    # Elastic Search
    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.1
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
        networks:
            - app-network



# Docker Networks
networks:
    app-network:
        driver: bridge
